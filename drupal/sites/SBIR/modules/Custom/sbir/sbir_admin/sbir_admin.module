<?php

/*
 * Implements hook_permission
 */

function sbir_admin_permission() {
  $permissions = array(
    'administer sbir' => array(
      'title' => t('Administer SBIR'),
      'restrict access' => TRUE,
    ),
  );
  return $permissions;
}

/*
 * Implements hook_menu
 */

function sbir_admin_menu() {
  $items['admin/config/sbir/admin'] = array(
    'title' => 'SBIR',
    'description' => 'Administer SBIR',
    'position' => 'right',
    'weight' => 0,
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('administer sbir'),
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system')
  );
  $items['admin/config/sbir/admin/settings'] = array(
    'title' => 'Settings',
    'description' => t('Configure SBIR'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('sbir_admin_settings_form'),
    'access arguments' => array('administer sbir'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

function sbir_admin_settings_form($form_state) {
  /*
    // Content Settings
    $form['content'] = array(
    '#type' => 'fieldset',
    '#title' => t('Content'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
    );
    $form['content']['upload'] = array(
    '#name' => 'files[' . implode('_', $form['#parents']) . ']',
    '#type' => 'file',
    '#title' => t('Home page banner'),
    '#required' => TRUE,
    //'#title_display' => 'invisible',
    '#size' => 22,
    '#theme_wrappers' => array(),
    //'#weight' => -10,
    '#description' => 'This banner appears on the home page.',
    );
   */
  // Email Subscription Settings
  $form['email'] = array(
    '#type' => 'fieldset',
    '#title' => t('Email Subscription'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );
  $form['email']['from'] = array(
    '#type' => 'textfield',
    '#title' => t('From Address'),
    '#required' => TRUE,
    '#default_value' => 'cedric.priestley@nih.gov',
    "#description" => "This is be used as the 'from' address for signup notifications"
  );
  $form['email']['to'] = array(
    '#type' => 'textfield',
    '#title' => t('To Address'),
    '#required' => TRUE,
    '#default_value' => 'cedric.priestley@nih.gov',
    '#description' => 'Signup notifications are sent to this email address',
  );
  $form['email']['new_subject'] = array(
    '#type' => 'textfield',
    '#title' => t('New Subscription Subject'),
    '#required' => TRUE,
    '#default_value' => 'SBIR & STTR Email Signup',
    '#description' => 'This subject is used for new signup subscriptions',
  );
  $form['email']['change_subject'] = array(
    '#type' => 'textfield',
    '#title' => t('Change Subscription Subject'),
    '#required' => TRUE,
    '#default_value' => 'SBIR & STTR Email Change',
    '#description' => 'This subject is used for updated email subscriptions',
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Save',
  );
  return $form;
}

/*
 * Implements hook_form_submit
 */

function sbir_admin_settings_form_submit($form, &$form_state) {
  
}

/*
 * Implements hook_form_alter
 */

function sbir_admin_form_alter(&$form, &$form_state, $form_id) {

//make local copy of form_id
  $node_form_id = $form_id;

  //overwrite all different node type forms to "node_form"
  //so only nodes will have this checkbox
  if (substr($node_form_id, -10) == '_node_form') {
    $node_form_id = 'node_form';
  }

  //dpm($test_form_id);
  //Also this variant was proposed
  /*
    if( $form['#id'] == 'node-form' ){
    $test_form_id = 'node_form';
    }
   */

  switch ($node_form_id) {

    case 'node_form':
      //get mlid, if mlid captured
      //this is node editing action
      $mlid = 0;
      //dpm($form['menu']);
      if (isset($form['menu']['link']['mlid']['#value']) && $form['menu']['link']['mlid']['#value'] > 0) {
        $mlid = $form['menu']['link']['mlid']['#value'];
        $menuItem = menu_link_load($mlid);
        //dpm($menuItem);
      }

      //add dummy hidden/enabled checkbox and
      //use previous value for checkbox status if available
      $form['menu']['link']['sbir_menu_item_enabled'] = array(
        '#type' => 'checkbox',
        '#title' => t('Enabled'),
        '#default_value' => ($mlid == 0 ? 1 : ($menuItem['hidden'] ? 0 : 1) ),
        '#description' =>
        t('Menu items that are not enabled will appear in any menus.'),
      );

      //hide the banner upload field (we don't want content editors to upload new ones)
      $form['field_banner']['#attributes']['style'] = 'display:none';
      break;
  }
}

/*
 * Implements hook_node_presave
 */

function sbir_admin_node_presave($node) {
  $node->menu['hidden'] = $node->menu['sbir_menu_item_enabled'] == 1 ? 0 : 1;
}
