<?php

/**
 * Implements hook_views_api().
 */
function sbir_email_notifications_views_api() {
  return array('api' => 3.0);
}

/**
 * Implementation of hook_ctools_plugin_api().
 */
function sbir_email_notifications_ctools_plugin_api($module, $api) {
  if ($module == 'page_manager' && $api == 'pages_default') {
    return array('version' => 1);
  }
}

/**
 * Implements hook_block_info().
 */
function sbir_email_notifications_block_info() {
  $blocks = array();
  $blocks['email_notification_add_block'] = array(
    'info' => t('Email Notification Add'),
  );
  $blocks['email_notification_update_block'] = array(
    'info' => t('Email Notification Update'),
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function sbir_email_notifications_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'email_notification_add_block':
      $block['subject'] = 'Email Notification Add';
      $block['content'] = _load_subscription_add_form();
      $_SESSION['sbir_email_subject'] = 'SBIR & STTR Email Signup';
      break;
    case 'email_notification_update_block':
      $block['subject'] = 'Email Notification Update';
      $block['content'] = _load_subscription_update_form();
      $_SESSION['sbir_email_subject'] = 'SBIR & STTR Email Change';
      break;
  }
  return $block;
}

function _load_subscription_add_form() {

  $subscription_node = _create_subscription_node();

  module_load_include('inc', 'node', 'node.pages');
  $email_form = drupal_get_form("sbir_subscription_node_form", $subscription_node);

  $email_form['field_current_email']['und'][0]['value']['#required'] = 0;
  $email_form['field_current_email']['und'][0]['#required'] = 0;
  $email_form['field_current_email']['#required'] = 0;

  unset($email_form['field_current_email']);

  return drupal_render($email_form);
}

function _load_subscription_update_form() {

  $subscription_node = _create_subscription_node();

  module_load_include('inc', 'node', 'node.pages');
  $email_form = drupal_get_form("sbir_subscription_node_form", $subscription_node);

  return drupal_render($email_form);
}

function _email_notification_form_submit(&$form, &$form_state) {

  if (isset($form_state['nid']) && is_numeric($form_state['nid'])) {
    $to = "cedricpriestley@gmail.com";
    $from = "cedricpriestley@gmail.com";

    $subject = $_SESSION['sbir_email_subject'];

    $body = "";
    $line = array();

    foreach ($form_state['values'] as $key => $value) {
      if ($subject == "SBIR & STTR Email Change") {
        if ($key == 'field_current_email') {
          $line[-1] .= "Current Email: " . $value['und'][0]['value'];
        }
      }
      if ($key == 'field_first_name') {
        $line[0] = "First Name: " . $value['und'][0]['value'];
      }
      if ($key == 'field_last_name') {
        $line[1] = "Last Name: " . $value['und'][0]['value'];
      }
      if ($key == 'field_email') {
        $line[2] = "Email: " . $value['und'][0]['value'];
      }
      if ($key == 'field_title_position') {
        $line[3] = "Title/Position: " . $value['und'][0]['value'];
      }
      if ($key == 'field_organization') {
        $line[4] = "Organization: " . $value['und'][0]['value'];
      }
      if ($key == 'field_street_address') {
        $line[5] = "Street Address: " . $value['und'][0]['value'];
      }
      if ($key == 'field_city') {
        $line[6] = "City: " . $value['und'][0]['value'];
      }
      if ($key == 'field_state_province') {
        $line[7] = "State/Province: " . $value['und'][0]['value'];
      }
      if ($key == 'field_zip_code') {
        $line[8] = "Zip Code: " . $value['und'][0]['value'];
      }
      if ($key == 'field_country') {
        $line[9] = "Country: " . $value['und'][0]['value'];
      }
      if ($key == 'field_phone') {
        $line[10] = "Phone: " . $value['und'][0]['value'];
      }
      if ($key == 'field_website') {
        $line[11] = "Website: " . $value['und'][0]['url'];
      }
      if ($key == 'field_organization_type') {
        $type = "";

        foreach ($value['und'] as $v) {
          $type .= $v['value'] . ",";
        }

        $type = trim($type, ',');
        $line[12] = "Organization Type: " . $type;
      }
      if ($key == 'field_other_organization_type') {
        $line[13] = "Other Organization Type: " . $value['und'][0]['value'];
      }
      if ($key == 'field_areas_of_interest') {
        $area = "";

        foreach ($value['und'] as $v) {
          $area .= $v['value'] . ",";
        }

        $area = trim($area, ',');
        $line[14] = "Areas Of Interest: " . $area;
      }
      if ($key == 'field_your_technologies') {
        $line[15] = "Describe your technology: " . $value['und'][0]['value'];
      }
      if ($key == 'field_ever_applied') {
        $v = $value['und'][0]['value'] == '0' ? 'No' : 'Yes';
        $line[16] = "Ever Applied: " . $v;
      }
      if ($key == 'field_ever_awarded') {
        $v = $value['und'][0]['value'] == '0' ? 'No' : 'Yes';
        $line[17] = "Ever Awarded from SBIR?: " . $v;
      }
      if ($key == 'field_ever_awarded_any') {
        $v = $value['und'][0]['value'] == '0' ? 'No' : 'Yes';
        $line[18] = "Ever Awarded from any agency?: " . $v;
      }
    }

    ksort($line);

    $body = "" . implode("\n\r\n\r", $line) . "";

    $params = array(
      'subject' => $subject,
      'body' => $body,
    );

    unset($_SESSION['messages']['status']);

    drupal_mail('sbir_email_notifications', 'email_subscription', $to, language_default(), $params, $from);
    $form_state['redirect'] = 'emailsignupthankyou';
  }
}

/**
 * Implements hook_mail().
 */
function sbir_email_notifications_mail($key, &$message, $params) {

  switch ($key) {
    case 'email_subscription':
      $message['subject'] = $params['subject'];
      $message['body'][] = $params['body'];

      $message['headers']['Content-Type'] = 'text/plain';
      break;
  }
}

function _validate_subscription_input($form, &$form_state) {

  $email_address = $form_state['values']['field_email']['und'][0]['value'];

  if (filter_var($email_address, FILTER_VALIDATE_EMAIL)) {
    $form_state['values']['title'] = $email_address;
  }
  else {
    form_set_error('Email Validation', "Email is not in the corrent format: jdoe@example.com");
  }

  //if (isset($form_state['values']['field_current_email']['und'][0]['value'])) {
  if ($form['#action'] == "/emailchange") {
    $current_email_address = $form_state['values']['field_current_email']['und'][0]['value'];

    if (filter_var($current_email_address, FILTER_VALIDATE_EMAIL)) {
      $form_state['values']['title'] = $current_email_address;
    }
    else {
      form_set_error('Email Validation', "Current Registered Email Address is not in the correct format: johndoe@example.com");
    }
  }

  if (isset($form_state['values']['field_website']['und'][0]['value'])) {
    $website = $form_state['values']['field_website']['und'][0]['value'];
    if (!filter_var($website, FILTER_VALIDATE_URL)) {
      form_set_error('Website Validation', "Website is not in the correct format: www.example.com");
    }
  }
}

/**
 * Implements hook_form_alter().
 */
function sbir_email_notifications_form_alter(&$form, &$form_state, $form_id) {

  if ($form_id == "sbir_subscription_node_form") {
    unset($form['actions']['preview']);
    unset($form['field_other_organization_type']['und'][0]['value']['#title']);
    $form['title']['#required'] = FALSE;
    $form['title']['#attributes']['style'] = 'display:none';
    $form['title']['#title'] = '';

    if ($form['#action'] == "/emailsignup") {
      $form['field_current_email']['und'][0]['value']['#required'] = 0;
    }

    $form['#validate'][] = '_validate_subscription_input';
    $form['actions']['submit']['#submit'][] = '_email_notification_form_submit';

    $form['#attached']['css'] = array(
      drupal_get_path('module', 'sbir_subscription') . '/css/sbir_email_notifications.css',
    );
    
    $form['my_captcha_element'] = array(
      '#type' => 'captcha',
      '#captcha_type' => 'recaptcha/reCAPTCHA',
    );

    dpm($form);
  }
}

function _create_subscription_node() {

  $subscription_node = new stdClass();

  $subscription_node->type = "sbir_subscription";
  node_object_prepare($subscription_node);
  $subscription_node->uid = 1;
  $subscription_node->language = 'und';
  $subscription_node->comment = 0;
  $subscription_node->status = 0;

  return $subscription_node;
}
