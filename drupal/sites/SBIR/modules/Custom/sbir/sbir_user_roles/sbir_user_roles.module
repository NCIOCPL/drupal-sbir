<?php

function set_sbir_permissions() {

  // Log message to console and watchdog
  $message = 'Resetting SBIR user permissions';
  watchdog('sbir_user_roles', $message, array(), WATCHDOG_NOTICE);
  drupal_set_message($message);

  // Create the role if necessary.
  $role = user_role_load_by_name('content author');
  if (!$role) {
    $role = new stdClass();
    $role->name = 'content author';
    user_role_save($role);
  }

  // Add the permissions to the role.
  $permissions = array(
    //'administer recaptcha',
    'use workbench_moderation needs review tab',
    'use workbench_moderation my drafts tab',
    'administer menu',
    'access toolbar',
    'administer nodequeue',
    'administer sbir_admin',
    'create url aliases',
    'edit metatags_quick',
    'display site building menu',
    'create sbir_announcement content',
    'create sbir_basic_page content',
    'create sbir_block content',
    'create sbir_event content',
    'create sbir_file content',
    'create sbir_success_story content',
    'delete any sbir_announcement content',
    'delete any sbir_basic_page content',
    'delete any sbir_block content',
    'delete any sbir_event content',
    'delete any sbir_file content',
    'delete any sbir_success_story content',
    'edit any sbir_announcement content',
    'edit any sbir_basic_page content',
    'edit any sbir_block content',
    'edit any sbir_event content',
    'edit any sbir_file content',
    'edit any sbir_success_story content',
    'manipulate all queues',
    'manipulate queues',
    'moderate content from draft to needs_review',
    'moderate content from needs_review to draft',
    'moderate content from needs_review to published',
  );

  user_role_revoke_permissions($role->rid, $permissions);
  user_role_grant_permissions($role->rid, $permissions);

  // Create the role if necessary.
  $role = user_role_load_by_name('content editor');
  if (!$role) {
    $role = new stdClass();
    $role->name = 'content editor';
    user_role_save($role);
  }

  // Add the permissions to the role.
  $permissions = array(
    'administer menu',
    'access toolbar',
    'create url aliases',
    'edit metatags_quick',
    'create sbir_announcement content',
    'create sbir_basic_page content',
    'create sbir_block content',
    'create sbir_event content',
    'create sbir_file content',
    'create sbir_success_story content',
    'delete any sbir_announcement content',
    'delete any sbir_basic_page content',
    'delete any sbir_block content',
    'delete any sbir_event content',
    'delete any sbir_file content',
    'delete any sbir_success_story content',
    'edit any sbir_announcement content',
    'edit any sbir_basic_page content',
    'edit any sbir_block content',
    'edit any sbir_event content',
    'edit any sbir_file content',
    'edit any sbir_success_story content',
    'moderate content from draft to needs_review',
    'moderate content from needs_review to draft',
  );

  user_role_revoke_permissions($role->rid, $permissions);
  user_role_grant_permissions($role->rid, $permissions);

  // Create the role if necessary.
  $role = user_role_load_by_name('site moderator');
  if (!$role) {
    $role = new stdClass();
    $role->name = 'site moderator';
    user_role_save($role);
  }

  // Add the permissions to the role.
  $permissions = array(
    //'administer recaptcha',
    'use workbench_moderation needs review tab',
    'use workbench_moderation my drafts tab',
    'administer menu',
    'access toolbar',
    'administer nodequeue',
    'administer sbir_admin',
    'create url aliases',
    'edit metatags_quick',
    'display site configuration menu',
    'display site building menu',
    'create sbir_announcement content',
    'create sbir_basic_page content',
    'create sbir_block content',
    'create sbir_event content',
    'create sbir_file content',
    'create sbir_success_story content',
    'delete any sbir_announcement content',
    'delete any sbir_basic_page content',
    'delete any sbir_block content',
    'delete any sbir_event content',
    'delete any sbir_file content',
    'delete any sbir_success_story content',
    'edit any sbir_announcement content',
    'edit any sbir_basic_page content',
    'edit any sbir_block content',
    'edit any sbir_event content',
    'edit any sbir_file content',
    'edit any sbir_success_story content',
    'manipulate all queues',
    'manipulate queues',
    'moderate content from draft to needs_review',
    'moderate content from needs_review to draft',
    'moderate content from needs_review to published',
  );

  user_role_revoke_permissions($role->rid, $permissions);
  user_role_grant_permissions($role->rid, $permissions);

  // Create the role if necessary.
  $role = user_role_load_by_name('advanced content editor');
  if (!$role) {
    $role = new stdClass();
    $role->name = 'advanced content editor';
    user_role_save($role);
  }

  // Add the permissions to the role.
  $permissions = array(
    //'administer recaptcha',
    'use workbench_moderation needs review tab',
    'use workbench_moderation my drafts tab',
    'administer menu',
    'access toolbar',
    'administer nodequeue',
    'administer sbir_admin',
    'create url aliases',
    'edit metatags_quick',
    'display site configuration menu',
    'display site building menu',
    'create sbir_announcement content',
    'create sbir_basic_page content',
    'create sbir_block content',
    'create sbir_event content',
    'create sbir_file content',
    'create sbir_success_story content',
    'delete any sbir_announcement content',
    'delete any sbir_basic_page content',
    'delete any sbir_block content',
    'delete any sbir_event content',
    'delete any sbir_file content',
    'delete any sbir_success_story content',
    'edit any sbir_announcement content',
    'edit any sbir_basic_page content',
    'edit any sbir_block content',
    'edit any sbir_event content',
    'edit any sbir_file content',
    'edit any sbir_success_story content',
    'manipulate all queues',
    'manipulate queues',
    'moderate content from draft to needs_review',
    'moderate content from needs_review to draft',
    'moderate content from needs_review to published',
  );

  user_role_revoke_permissions($role->rid, $permissions);
  user_role_grant_permissions($role->rid, $permissions);

  // Create the role if necessary.
  $role = user_role_load_by_name('site manager');
  if (!$role) {
    $role = new stdClass();
    $role->name = 'site manager';
    user_role_save($role);
  }

  // Add the permissions to the role.
  $permissions = array(
    'administer recaptcha',
    'use workbench_moderation needs review tab',
    'use workbench_moderation my drafts tab',
    'administer menu',
    'access toolbar',
    'administer nodequeue',
    'administer sbir_admin',
    'create url aliases',
    'edit metatags_quick',
    'display site configuration menu',
    'display site building menu',
    'create sbir_announcement content',
    'create sbir_basic_page content',
    'create sbir_block content',
    'create sbir_event content',
    'create sbir_file content',
    'create sbir_success_story content',
    'delete any sbir_announcement content',
    'delete any sbir_basic_page content',
    'delete any sbir_block content',
    'delete any sbir_event content',
    'delete any sbir_file content',
    'delete any sbir_success_story content',
    'edit any sbir_announcement content',
    'edit any sbir_basic_page content',
    'edit any sbir_block content',
    'edit any sbir_event content',
    'edit any sbir_file content',
    'edit any sbir_success_story content',
    'manipulate all queues',
    'manipulate queues',
    'moderate content from draft to needs_review',
    'moderate content from needs_review to draft',
    'moderate content from needs_review to published',
  );

  user_role_revoke_permissions($role->rid, $permissions);
  user_role_grant_permissions($role->rid, $permissions);
}

function sbir_create_users($name, $pass, $email) {
  $new_user = array(
    'name' => $name,
    'pass' => $sifra, // note: do not md5 the password
    'mail' => $email,
    'status' => 1,
    'init' => $email,
    'roles' => array(
      DRUPAL_AUTHENTICATED_RID => 'authenticated user',
      3 => 'custom role',
    ),
  );

// The first parameter is sent blank so a new user is created.
  user_save('', $new_user);
}

/*
 * Implements hook_modules_enabled
 */

function sbir_user_roles_modules_enabled($modules) {
  set_sbir_permissions();
}

/*
 * Implements hook_modules_disabled
 */

function sbir_user_roles_modules_disabled($modules) {
  set_sbir_permissions();
}
